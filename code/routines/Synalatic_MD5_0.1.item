package routines;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;

/*
 * user specification: the function's comment should contain keys as follows: 1. write about the function's comment.but
 * it must be before the "{talendTypes}" key.
 * 
 * 2. {talendTypes} 's value must be talend Type, it is required . its value should be one of: String, char | Character,
 * long | Long, int | Integer, boolean | Boolean, byte | Byte, Date, double | Double, float | Float, Object, short |
 * Short
 * 
 * 3. {Category} define a category for the Function. it is required. its value is user-defined .
 * 
 * 4. {param} 's format is: {param} <type>[(<default value or closed list values>)] <name>[ : <comment>]
 * 
 * <type> 's value should be one of: string, int, list, double, object, boolean, long, char, date. <name>'s value is the
 * Function's parameter name. the {param} is optional. so if you the Function without the parameters. the {param} don't
 * added. you can have many parameters for the Function.
 * 
 * 5. {example} gives a example for the Function. it is optional.
 */
public class Synalatic_MD5 {

	   public static String getEncodedString (String password) throws NoSuchAlgorithmException
	    {
	        byte[] uniqueKey = password.getBytes();
	        byte[] hash = null;
	        hash = MessageDigest.getInstance("MD5").digest(uniqueKey);
	        StringBuilder hashString = new StringBuilder();
	        for (int i = 0; i < hash.length; i++) {
	            String hex = Integer.toHexString(hash[i]);
	            if (hex.length() == 1) {
	                hashString.append('0');
	                hashString.append(hex.charAt(hex.length() - 1));
	            } else {
	                hashString.append(hex.substring(hex.length() - 2));
				}
	        }
	        return hashString.toString();
	    }
	   
	   public static void main (String[]  args){  
			
		 String toto="Salut";
		 
				 System.out.println(getEncodedString(toto));
		}
   
}
