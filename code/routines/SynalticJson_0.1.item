package routines;

import org.everit.json.schema.Schema;
import org.everit.json.schema.loader.SchemaLoader;

import org.everit.json.schema.ValidationException;

import org.json.JSONObject;
import org.json.JSONTokener;

/*
 * user specification: the function's comment should contain keys as follows: 1. write about the function's comment.but
 * it must be before the "{talendTypes}" key.
 * 
 * 2. {talendTypes} 's value must be talend Type, it is required . its value should be one of: String, char | Character,
 * long | Long, int | Integer, boolean | Boolean, byte | Byte, Date, double | Double, float | Float, Object, short |
 * Short
 * 
 * 3. {Category} define a category for the Function. it is required. its value is user-defined .
 * 
 * 4. {param} 's format is: {param} <type>[(<default value or closed list values>)] <name>[ : <comment>]
 * 
 * <type> 's value should be one of: string, int, list, double, object, boolean, long, char, date. <name>'s value is the
 * Function's parameter name. the {param} is optional. so if you the Function without the parameters. the {param} don't
 * added. you can have many parameters for the Function.
 * 
 * 5. {example} gives a example for the Function. it is optional.
 */
public class SynalticJson {

    /**
     * jsonIsValid: return true if JSON is valid.
     * 
     * 
     * {talendTypes} String
     * 
     * {Category} PGA
     * 
     * {param} string("jsonDoc") input: The JSON doc to validate.
     * {param} string("jsonSchema") input: The JSON Schema.
     * 
     */
    public static String jsonIsValid(String jsonDoc, String jsonSchema) {
    	if (jsonDoc == null || jsonSchema == null)
    		return "KO. Au moins 1 param√®tre est null";
    	try{
	    	JSONObject rawSchema = new JSONObject(new JSONTokener(jsonSchema));
	    	Schema schema = SchemaLoader.load(rawSchema);
	    	schema.validate(new JSONObject(jsonDoc));
	    	return "OK";
    	
	    	//} catch(ValidationException e){
    	} catch(Exception e){
    		return e.getMessage();
    	}
    }
    public static void main(String[] args){
    	System.out.println(jsonIsValid("",""));
    }
}

